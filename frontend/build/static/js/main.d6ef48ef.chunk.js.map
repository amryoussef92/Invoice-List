{"version":3,"sources":["components/HomePage.js","components/InvoiceDetails.js","components/InvoiceList.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","navigate","useNavigate","React","createElement","className","onClick","InvoiceDetails","id","useParams","units","setUnits","useState","invoice","setInvoice","productName","unitNo","price","quantity","total","expiryDate","useEffect","async","response","axios","get","data","error","console","fetchUnits","log","Number","fetchInvoice","handleChange","e","name","value","target","parsedValue","prevState","[object Object]","onSubmit","preventDefault","invoiceData","put","alert","post","type","readOnly","onChange","required","map","unit","key","unitName","step","delete","style","marginLeft","InvoiceList","invoices","setInvoices","fetchInvoices","window","confirm","filter","handleDelete","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d6ef48ef.chunk.js","sourcesContent":["import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Home.css\";\n\nconst HomePage = () => {\n  const navigate = useNavigate();\n\n  return (\n    <div className=\"home\">\n      <h1>Welcome to the Invoice App</h1>\n      <p>Manage your invoices with ease.</p>\n\n      <button onClick={() => navigate(\"/invoice-details\")}>\n        Invoice Details\n      </button>\n      <button onClick={() => navigate(\"/invoice-list\")}>Invoice List</button>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport \"./InvoiceDetails.css\";\n\nconst InvoiceDetails = () => {\n  const { id } = useParams(); // Get the invoice id from the URL\n  const navigate = useNavigate();\n  const [units, setUnits] = useState([]);\n  const [invoice, setInvoice] = useState({\n    productName: \"\",\n    unitNo: \"\",\n    price: 0,\n    quantity: 0,\n    total: 0,\n    expiryDate: \"\",\n  });\n\n  useEffect(() => {\n    const fetchUnits = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:4000/api/units\");\n        setUnits(response.data);\n      } catch (error) {\n        console.error(\"Error fetching units:\", error);\n      }\n    };\n\n    const fetchInvoice = async () => {\n      if (id) {\n        try {\n          const response = await axios.get(\n            `http://localhost:4000/api/invoicedetails/${id}`\n          );\n          console.log(\"Fetched Invoice Data:\", response.data);\n          setInvoice({\n            productName: response.data.productName,\n            unitNo: response.data.unitNo,\n            price: Number(response.data.price),\n            quantity: Number(response.data.quantity),\n            total: Number(response.data.total),\n            expiryDate: response.data.expiryDate,\n          });\n        } catch (error) {\n          console.error(\"Error fetching invoice details:\", error);\n        }\n      }\n    };\n\n    fetchUnits();\n    fetchInvoice();\n  }, [id]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    const parsedValue =\n      name === \"price\" || name === \"quantity\" ? Number(value) : value;\n    setInvoice((prevState) => ({\n      ...prevState,\n      [name]: parsedValue,\n      total:\n        name === \"price\" || name === \"quantity\"\n          ? (name === \"price\" ? parsedValue : prevState.price) *\n            (name === \"quantity\" ? parsedValue : prevState.quantity)\n          : prevState.total,\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Prepare data for submission\n    const { productName, unitNo, price, quantity, total, expiryDate } = invoice;\n    const invoiceData = {\n      productName,\n      unitNo,\n      price,\n      quantity,\n      total,\n      expiryDate,\n    };\n\n    console.log(\"Submitting Invoice Data:\", invoiceData);\n\n    try {\n      if (id) {\n        // Update existing invoice\n        await axios.put(\n          `http://localhost:4000/api/invoicedetails/${id}`,\n          invoiceData\n        );\n        alert(\"Invoice updated!\");\n      } else {\n        // Create new invoice\n        await axios.post(\n          `http://localhost:4000/api/invoicedetails`,\n          invoiceData\n        );\n        alert(\"Invoice created!\");\n      }\n      navigate(\"/invoice-list\"); // Redirect to list after operation\n    } catch (error) {\n      console.error(\"Error saving invoice:\", error);\n      alert(\"Error saving invoice. Please check the console for details.\");\n    }\n  };\n\n  const removeInvoice = async (e) => {\n    e.preventDefault(); // Prevent form submission\n    try {\n      await axios.delete(`http://localhost:4000/api/invoicedetails/${id}`);\n      console.log(`Invoice with id ${id} deleted successfully`);\n      alert(\"Invoice deleted!\");\n      navigate(\"/invoice-list\"); // Navigate back to the list after deletion\n    } catch (error) {\n      console.error(\"There was an error deleting the invoice:\", error);\n      alert(\"Error deleting invoice. Please check the console for details.\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {id && (\n        <div>\n          <label>Invoice ID:</label>\n          <input type=\"number\" name=\"id\" value={id} readOnly />\n        </div>\n      )}\n      <div>\n        <label>Product Name:</label>\n        <input\n          type=\"text\"\n          name=\"productName\"\n          value={invoice.productName}\n          onChange={handleChange}\n          required\n        />\n      </div>\n      <div>\n        <label>Unit:</label>\n        <select\n          name=\"unitNo\"\n          value={invoice.unitNo}\n          onChange={handleChange}\n          required\n        >\n          <option value=\"\">Select Unit</option>\n          {units.map((unit) => (\n            <option key={unit.unitNo} value={unit.unitNo}>\n              {unit.unitName}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div>\n        <label>Price:</label>\n        <input\n          type=\"number\"\n          name=\"price\"\n          value={invoice.price}\n          onChange={handleChange}\n          required\n          step=\"0.01\"\n        />\n      </div>\n      <div>\n        <label>Quantity:</label>\n        <input\n          type=\"number\"\n          name=\"quantity\"\n          value={invoice.quantity}\n          onChange={handleChange}\n          required\n        />\n      </div>\n      <div>\n        <label>Total:</label>\n        <input type=\"number\" name=\"total\" value={invoice.total} readOnly />\n      </div>\n      <div>\n        <label>Expiry Date:</label>\n        <input\n          type=\"date\"\n          name=\"expiryDate\"\n          value={invoice.expiryDate}\n          onChange={handleChange}\n          required\n        />\n      </div>\n      <button type=\"submit\">{id ? \"Update Invoice\" : \"Create Invoice\"}</button>\n      {id && (\n        <button onClick={removeInvoice} style={{ marginLeft: \"10px\" }}>\n          Delete Invoice\n        </button>\n      )}\n    </form>\n  );\n};\n\nexport default InvoiceDetails;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./InvoiceList.css\";\n\nconst InvoiceList = () => {\n  const [invoices, setInvoices] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Fetching the invoices from the server\n    const fetchInvoices = async () => {\n      try {\n        const response = await axios.get(\n          \"http://localhost:4000/api/invoicedetails\"\n        );\n        setInvoices(response.data);\n      } catch (error) {\n        console.error(\"Error fetching invoices:\", error);\n      }\n    };\n    fetchInvoices();\n  }, []);\n\n  // Function to handle invoice deletion\n  const handleDelete = async (id) => {\n    if (window.confirm(\"Are you sure you want to delete this invoice?\")) {\n      try {\n        await axios.delete(`http://localhost:4000/api/invoicedetails/${id}`);\n        // Update state after deletion by filtering out the deleted invoice\n        setInvoices(invoices.filter((invoice) => invoice.id !== id));\n        alert(\"Invoice deleted successfully.\");\n      } catch (error) {\n        console.error(\"Error deleting invoice:\", error);\n        alert(\"Error deleting invoice. Please try again.\");\n      }\n    }\n  };\n\n  return (\n    <div className=\"invoice-list\">\n      <h1>Invoice List</h1>\n      <table>\n        <thead>\n          <tr>\n            <th>id</th>\n            <th>Product Name</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {invoices.map((invoice) => (\n            <tr key={invoice.id}>\n              <td>{invoice.id}</td>\n              <td>{invoice.productName}</td>\n              <td>\n                <button\n                  onClick={() => navigate(`/invoice-details/${invoice.id}`)}\n                >\n                  View Details\n                </button>\n                <button\n                  onClick={() => handleDelete(invoice.id)}\n                  style={{ marginLeft: \"10px\" }}\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default InvoiceList;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport HomePage from \"./components/HomePage\";\nimport InvoiceDetails from \"./components/InvoiceDetails\";\nimport InvoiceList from \"./components/InvoiceList\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/invoice-details/:id\" element={<InvoiceDetails />} />{\" \"}\n        {/* Corrected Route */}\n        <Route path=\"/invoice-details\" element={<InvoiceDetails />} />{\" \"}\n        {/* Route for Creating */}\n        <Route path=\"/invoice-list\" element={<InvoiceList />} />\n        <Route path=\"*\" element={<div>404 Not Found</div>} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}